"""
0으로 된 도로에 숫자 블록을 설치하기로 함
숫자 블록 규칙
- 블록의 번호가 n일 때, 가장 처음 블록은 n*2번쨰 위치에 설치
- 그 다음 n*3, 그다음은 n*4로 진행
- 만약 기존에 블록이 깔려있는 자리라면 그 블록을 뺴고 새로운 블록을 집어 넣음

예시
1번 블록은 2, 3, 4, 5, ...인 위치에 우선 설치
그다음 2번 블록은 4, 6, 8, 10,...인 위치에 설치
그 다음 3번 블록은 6, 9 ,12인 위치에 설치
이렇게 3번 블록까지 설치하고 나면 첫 10개의 블록은 0, 1, 1, 2, 1, 3, 1, 2, 3, 2으로 설치

그렙시는 길이가 1,000,000,000인 도로에 1번 블록부터 시작하여 10,000,000번 블록까지 위의 규칙으로 모두 놓았음

구간을 나타내는 두 수 begin, end 가 매개변수로 주어 질 때, 그 구간에 깔려 있는 블록의 숫자 배열(리스트)을 return


"""
import math
def solution(begin, end):
    result = []

    for i in range(begin, end+1):
        if i < 2:
            result.append(0)
        else:
          # 제곱근해서 -> int로 변환해서 하는 것보다 
          # 개인적으로 해당 숫자의 절반 i//2까지만 탐색하는게 더 효율적인것 같음
            for j in range(2, int(math.sqrt(i))+1):
                if i%j ==0 and i//j <=10000000:
                    result.append(i//j)
                    break
            else:
                result.append(1)
    return result
