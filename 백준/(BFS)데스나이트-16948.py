# -*- coding: utf-8 -*-
"""Untitled1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1tdmS2sBvr2XtpjIwArKUHWt71Prqw6_a
"""

from collections import deque

# 체스판 크기 
N = int(input())

# 데스 나이트 시작 좌표 (r1, c1) ,도착 좌표(r2 ,c2)
r1, c1, r2, c2 = map(int, input().split())

# N * N 체스판
map_ =[[0] * N for _ in range(N)]

# 이동 거리
d = [(-2, -1), (-2, 1), (0, -2), (0, 2), (2, -1), (2, 1)]

def bfs(x, y ,r2,c2):
  q = deque()
  q.append((x, y))
  while q:
    x, y = q.popleft()
    for dx, dy in d:
      nx, ny = x + dx, y + dy
      if 0<= nx < N and 0<=ny <N and map_[nx][ny]== 0:
        map_[nx][ny] = map_[x][y] + 1
        q.append((nx, ny))

  # map_[r2][c2] 값이 양수면 해당 값 리턴
  if map_[r2][c2]:
    return map_[r2][c2]
  # 0 이면 -1  
  else:
    return -1
  
print(bfs(r1, c1, r2, c2))